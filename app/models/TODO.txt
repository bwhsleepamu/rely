== 0.5.0
  - We are trying to scope everything by projects
    - project is created by a user
    - project is administered by project managers, which include creator
    - transfer of ownership is possible (google docs model)
    - project has scorers

    - exercise belongs to a project
    - exercise is launched by a project manager
    - exercise shows up for project managers of project that it belongs to
    - exercise shows up for scorers that are part of the exercise

    - study is created by a project manager
    - study belongs to a project


    - group is created by a project manager
    - group belongs to a project

    - study type is created by a project manager
    - study type belongs to project

    - a scoring rule is created by project manager
    - a scoring rule belongs to ONLY ONE PROJECT

    - an original result is created by a project manager
    - an original result belongs to a study/scoring rule combo, and as a result also belongs to ONLY ONE PROJECT

    - reliability ids and related functionality are hopefully unaffected

  The scopes for each model should be as follows:

  Project:
    viewable + editable by its creator, but through manager association
      - creator automatically becomes a manager (basically, intersect creator and manager roles for viewable projects)
      - creator cannot be removed as manager
      - creator can be transferred (maybe lets call it owner instead of creator) (future)
        * creator id changed to new subject
        * loses all privileges for managing the project
        * project disappears from view

    viewable + editable by all project managers
      - managers see project dashboard containing:
        * project exercises
        * project scorers
        * project managers

        * project groups
        * project studies
        * project study types
        * project scoring rules
        ^ All of the above are project-specific.

    viewable by scorers assigned to project
      - scorers see their own project dashboard where some project descriptions and assigned exercises are shown

  Exercise:
    Chosen option:
    1. viewable + editable by managers of parent project (which includes creator)

    viewable + editable by managers of parent project
      * these users would basically see the current admin dashboard for the exercise

    viewable + completable by assigned scorers
      * again, same dashboard as currently used

    ** This organization will require two different scorer associations:
      1. a project-level association
      2. an exercise-level association

    ** Similarly to how projects work, an exercise creator would not get any special privileges. The creator id would be
       stored, but all functionality would be defined through the project manager association

  Study Type: scoped by project
    viewable and editable by any manager of a project the study type is part of

    ** again, creator id stored, but maybe not needed in functionality for now.

  Study: scoped by project

    viewable and editable by any manager of a project the study is part of

    this means original results are also scoped by project, and still restricted to the number of different scoring rules
    that are defined in the given project.

  Group: scoped by project

    viewable and editable by any manger of a project the group is part of


  ** anything associated with the exercise will work like it does not - not much needs to change with reliability_ids and
  rescored results, or assessments/assessment results. Assessment types will also continue to be hardcoded for now.

  Summary of DB Changes:
    - Projects need to have the following associations:
      * studies (study belongs to project) --> project_id on study
      * groups (group belongs to project) --> project_id on group
      * study_types (study_type belongs to project) --> project_id on study_type
      * scoring_rules (scoring rule belongs to project) --> project_id on scoring rule
      * exercises (exercise belongs to project) --> project_id on exercise

      * project has many project_managers (many-to-many relationship, simple)
      * project has one owner (creator_id ==> owner_id)
      * project has many scorers (many-to-many relationship, simple)

      so,
      add project_id to Study, Group, Study Type, Scoring Rule, Exercise.
      change creator_id to owner_id in Project table
      add ProjectScorer table
      add ProjectManager table

== 0.4.0
  - Exercise no longer stores assessment type
    delete field from table
  - Rule stores assessment type
    add field to table
  - Study can have multiple assessment results: only one per Rule
    add new table: StudyOriginalResults
      store: study id, result id, rule id <-- unique combo

